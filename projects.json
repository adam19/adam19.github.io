{
	"Projects": [
		{
			"title": "Disney",
			"state": "modal.disney",
			"img": "img/DisneyLogo.jpg",
			"leftContent": [
				"During my time at The Walt Disney Company I've been in charge of handling updates for multiple legacy games and projects including updating mobile games for iPhone and Android, and transitioning an online tool for desktop use.",
				"The first three projects I tackled involved upgrading Beauty and the Beast: Perfect Match, Inside Out: Thought Bubbles and Disney Dream Treats for the new, taller iPhone X layout. All of which were high-grossing titles for the company, and iPhone X support was desperately needed. I examined every screen in the game and developed methods to utilize the new layout. Each of the games were turned around with time to spare, and under budget.",
				"Primarily my role at Disney involves updating multiple mobile games on the iOS and Android platforms. There are many reasons as to why upgrades are needed. Sometimes there are new requirements for iOS or Android. Sometimes Disney needs a game to meet new security and privacy policies. Whatever the need is, it's my responsibility to update the game.",
				"Since the job requires updating a lot of titles in a short period, I've written several scripts to help speed up the development process. One of the games I worked on needed to have several bits of text updated in the Settings/About screen, but all of the text was lost from the archives, but the final version was stored in an image atlas. No raw text. I wrote a script that rendered the correct image atlas to an image file, ran the image through an OCR application, updated the text, recompiled the image atlas and shipped the game. Another set of scripts that save me time are post-build scripts which update Android manifest files and Gradle build scripts. Certain versions of Unity can't build proper Gradle projects since Gradle is still being updated. These post-build scripts have saved time updating pieces of data to fit Gradle's requirements on every build. This saves us hours of work!",
				"My current team works closely with the business-development group, and occasionally there's a need to revive and refresh older games for modern platforms in a short time period. Many times we ran into issues involving asset loading, graphics and rendering problems from our archives. I've taken many steps to remedy these issues and get the game up and running again. There's been several instances that I've worked to remove bugs that exist in the live game. Every time we received a request, we have met the time and budget constraints with room to spare.",
				"Disney Story Central was Disney's platform for delivering digital story books for children.  One of the largest undertakings for me was transitioning Disney Story Central (DSC) to a CDN and move the tools to an offline capacity. The servers were being repurposed for a new project, but several books and the DSC tools were still utilized by a couple of teams. The books were moved from a hosted environment with a PHP backend to a simple CDN server. A lot of the auto-play books did not work on the new CDN since the audio files required streaming, and the CDN couldn't support this. I worked to split and manage the audio files so the smaller pieces could be downloaded faster enabling the user to get into the book 10x faster! The backend tools were built using AngularJS, PHP and several Java applets. I built an offline application that used the Electron JS framework so eBooks could be converted to the necessary HTML/JS/CSS files. I also added a feature to preview the books straight from the application. This application alone saved several contracts and business deals with several external companies."
			],
			"rightContent": [
				{
					"type": "video",
					"title": "Beauty and the Beast: Perfect Match",
					"url": "https://www.youtube.com/embed/AuzVZLqdvmQ"
				},
				{
					"type": "video",
					"title": "Disney Dream Treats",
					"url": "https://www.youtube.com/embed/_GfgACr3Rr8"
				}
			],
			"tags": [
				"C#", "Unity", "Web", "Mobile"
			]
		},
		{
			"title": "Raw Data (Oculus Rift, HTC Vive, PSVR)",
			"state": "modal.rawdata",
			"img": "img/raw-data.jpg",
			"leftContent": [
				"I was one of a couple engineers on the hit VR game Raw Data for the PC and PS4 released in 2017. During my time on the project I was responsible for multiple aspects of the game including analytics reporting, achievements, several critical gameplay elements, three different demos, and last but not least, Raw Data Arcade!",
				"Early in development, I was in charge of implementing analytics and reporting for Raw Data and the underlying Survios platform. We used an external data management company that I worked with to develop a UE4 plugin that sent REST calls to their backend servers. During gameplay I would aggregate all of the bits of data such as number of kills, number of deaths,time played, etc. and send the data during level transitions. If the game crashed or internet was lost, all of the data was still on the player's machine waiting to be reported. It was a flexible and reliable system that made it's way into several other Survios titles. All of this data was extremely valuable and was used to tweak and enhance gameplay for the for the final release.",
				"When the majority of the game was complete I was responsible for implementing Achievements for the multiple platforms Raw Data was released on including Steam, Oculus Home and Trophies for the PlayStation. Since the platforms track Achievement data in vastly different ways, we settled on storing all of the data locally, and reporting the unlocked Achievement to the platform once the threshold was reached. This made unlocking Achievements simple to implement for any platform. The thesholds were defined using a simple data container in the UE4 Editor. Designers were able to tweak the unlock requirements very easily and never needed to consult an engineer to make updates.",
				"Throughout my time at Survios I built three different demos of the game which were deployed through different avenues. The first demo I built was for Valve to show off their HTC Vive headset in retail locations including Best Buy and Gamestop. The second demo I developed was used during Survios's largest E3 presence ever in 2017. Lines wrapped around the booth where attendees waited for, on occasion, two hours to play! The last demo I built for Raw Data now lives on the PSVR Demo Disk that came with the initial PSVR kits.",
				"One of the largest undertakings that I took over was Raw Data Arcade. I worked with a game designer to determine how the game should flow in a timed Arcade environment versus a typical home environment. We also gave arcade managers an easy to use interface written in Unreal Motion Graphics (UMG) to alter aspects of the game including timers, available heros, unlocks, levels, etc. Every VR arcade wanted to provide their own customized experience for their customers. In the end we delivered an outstanding product that's now a headliner in over 1000 arcades world-wide!"
			],
			"rightContent": [
				{
					"type": "video",
					"title": "Raw Data Trailer",
					"url": "https://www.youtube.com/embed/IYLC812nDcI"
				}
			],
			"tags": [
				"UE4", "C++", "VR", "Oculus", "Playstation"
			]
		}
	]
}